###### Autogenerated by Mizuho, DO NOT EDIT ######
# This file maps section names to IDs so that the commenting system knows which
# comments belong to which section. Section names may be changed at will but
# IDs always stay the same, allowing one to retain old comments even if you
# rename a section.
#
# This file is autogenerated but is not a cache; you MUST NOT DELETE this
# file and you must check it into your version control system. If you lose
# this file you may lose the ability to identity old comments.
#
# Entries marked with "fuzzy" indicate that the section title has changed
# and that Mizuho has found an ID which appears to be associated with that
# section. You should check whether it is correct, and if not, fix it.

1. Support information	=>	support-information-1x8e9ee

1.1. Supported operating systems and languages	=>	supported-operating-systems-1387080

1.2. Where to get support	=>	where-to-get-support-xkx7rx

2. Installation	=>	installation-2vrmef

2.1. Synopsis	=>	synopsis-92sr34

2.2. Installing or upgrading on Mac OS X with Homebrew	=>	installing-or-upgrading-on-mac-os-x-with-homebrew-fxjdi1

2.3. Installing or upgrading on Debian or Ubuntu	=>	installing-or-upgrading-on-debian-or-ubuntu-gme2a9

2.3.1. Adding our APT repository	=>	adding-our-apt-repository-1qu2se8

2.3.2. Installing packages	=>	installing-packages-k1zxbg

2.4. Installing or upgrading on Red Hat or CentOS	=>	installing-or-upgrading-on-red-hat-fedora-centos-or-scientificlinux-16cek45

2.4.1. Adding our YUM repository	=>	adding-our-yum-repository-7c3y3z

2.4.2. Installing packages	=>	installing-packages-1i5z60y

2.5. Installing or upgrading on Heroku	=>	installing-or-upgrading-on-heroku-rspclc

2.6. Generic installation, upgrade and downgrade method: via RubyGems	=>	generic-installation-upgrade-and-downgrade-method-via-rubygems-1229ugi

2.7. Generic installation, upgrade and downgrade method: via tarball	=>	generic-installation-upgrade-and-downgrade-method-via-tarball-1rwvasy

2.8. Upgrading from open source to Enterprise	=>	upgrading-from-open-source-to-enterprise-1kezors

2.9. Cryptographic verification of installation files	=>	cryptographic-verification-of-installation-files-85nwoi

2.9.1. Synopsis	=>	synopsis-1ij8j9r

2.9.2. Importing the Phusion Software Signing key	=>	importing-the-phusion-software-signing-key-1u5hkcr

2.9.3. Verifying the Phusion Software Signing key	=>	verifying-the-phusion-software-signing-key-qor1n1

2.9.4. Verifying the gem and tarball	=>	verifying-the-gem-and-tarball-i7tj7a

2.9.5. Verifying Git signatures	=>	verifying-git-signatures-dltpan

2.9.6. Verifying DEB and RPM packages	=>	verifying-deb-and-rpm-packages-uga0ho

2.9.7. Revocation	=>	revocation-ukzeg9

2.10. Customizing the compilation process	=>	customizing-the-compilation-process-j4xj2t

2.10.1. Setting the compiler	=>	setting-the-compiler-1fxfulc

2.10.2. Adding additional compiler or linker flags	=>	adding-additional-compiler-or-linker-flags-nxfour

2.10.3. Forcing location of command line tools and dependencies	=>	forcing-location-of-command-line-tools-and-dependencies-xajpg1

2.11. Uninstalling	=>	uninstalling-3hpprb

2.12. Moving to a different directory	=>	moving-to-a-different-directory-b3lpy1

3. Usage	=>	usage-1eyt33o

4. Configuration	=>	configuration-10trfau

4.1. Command line options	=>	command-line-options-1njv6kt

4.2. Configuration file	=>	configuration-file-xng7yp

4.3. Advanced configuration	=>	advanced-configuration-e3v4pk

5. Using Passenger Standalone in production	=>	using-passenger-standalone-in-production-1i7yjcz

5.1. Starting Passenger Standalone at system boot	=>	starting-passenger-standalone-at-system-boot-jpem2b

5.2. Sharing the same port between multiple Passenger Standalone instances	=>	sharing-the-same-port-between-multiple-passenger-standalone-instances-3lcmc5

5.3. Installing Passenger Standalone behind Nginx	=>	installing-passenger-standalone-behind-nginx-1xylsfk

6. Mass deployment	=>	mass-deployment-1xqriy4

7. Troubleshooting	=>	troubleshooting-o7g75o

7.1. Generic troubleshooting tips	=>	generic-troubleshooting-tips-2vokcr

7.2. Upon uploading a file, Phusion Passenger reports "client_body_temp/00000000xx failed (2: No such file or directory)"	=>	upon-uploading-a-file-phusion-passenger-reports-client-body-temp-00000000xx-failed-2-no-such-file-or-directory--d01goe

7.3. I get "command not found" when running a Phusion Passenger command through sudo	=>	i-get-command-not-found-when-running-a-phusion-passenger-command-through-sudo-14k8kde

8. Under the hood	=>	under-the-hood-ub7j3q

8.1. Phusion Passenger and its relationship with Ruby	=>	phusion-passenger-and-its-relationship-with-ruby-1usvd0o

8.1.1. How Ruby is used	=>	how-ruby-is-used-1saha86

8.1.2. When the system has multiple Ruby interpreters	=>	when-the-system-has-multiple-ruby-interpreters-acf6d

9. Appendix: About environment variables	=>	appendix-about-environment-variables-1ct91x3

9.1. Working with environment variables	=>	working-with-environment-variables-11cmwlv

9.2. The PATH environment variable	=>	the-path-environment-variable-yzfn3k

9.2.1. Adding Phusion Passengerâ€™s administration tools to PATH	=>	adding-phusion-passenger-s-administration-tools-to-path-d7k5mh

9.3. Making environment variables permanent	=>	making-environment-variables-permanent-mkq46d

9.3.1. bash	=>	bash-hmcscc

9.3.2. Apache	=>	apache-15y3bm0

9.3.3. Nginx	=>	nginx-uarf27

9.3.4. cron	=>	cron-6272ar

9.3.5. Phusion Passenger-served apps	=>	phusion-passenger-served-apps-127wbl2

9.4. Environment variables and sudo	=>	environment-variables-and-sudo-znzmif

